name: Deploy Application

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: "us-east-1"
      AWS_ACCOUNT_ID: "471112872744"
      ECR_REPOSITORY: "hiberus-repository"
      DOCKER_REPO: "hiberus-repository"
      KEY_PAIR: "my-key-pair" 
      SECURITY_GROUP_ID: "sg-039cf60f138d32c91"  
      SUBNET_ID: "subnet-016d0715f81141ebe"  

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: docker build -t ${{ env.DOCKER_REPO }}/challenge:latest .

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker image to Amazon ECR
        run: |
          docker tag ${{ env.DOCKER_REPO }}/your-app-name:latest ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest

      - name: Deploy to Amazon EC2
        run: |
          aws ec2 run-instances --image-id ami-02aead0a55359d6ec --count 1 --instance-type t3.micro --key-name ${{ env.KEY_PAIR }} --security-group-ids ${{ env.SECURITY_GROUP_ID }} --subnet-id ${{ env.SUBNET_ID }} --user-data file://ec2/user-data.sh
